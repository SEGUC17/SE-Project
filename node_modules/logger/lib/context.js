/* eslint no-console:0 */

const context = (contextName, onOff) => {
  const api = function log(...stuff) {
    const convertedToStrings = [...stuff].map((thing) => {
      if (typeof thing === 'object') {
        return JSON.stringify(thing, (key, value) => {
          if (typeof value === 'function') {
            // If any function named json is found then call that function to get the json object.
            if (key === 'json') {
              try {
                return value();
              } catch (err) {
                // Throws? No worries. Just go on and return string.
              }
            }
            return '[Function]';
          }
          if (value instanceof File) {
            return `[File name: ${value.name}, mimetype: ${value.type}, size: ${value.size}]`;
          }
          return value;
        }, 2);
      }
      return thing;
    });
    if (onOff.isWorking()) {
      console.log(`[${contextName}]`, ...convertedToStrings);
    }
  };

  api.context = (subContextName) => {
    return context(`${contextName}][${subContextName}`, onOff);
  };

  api.on = onOff.on;
  api.off = onOff.off;

  return api;
};

export default context;
